
public class Account {
	private int number = 0;
	private String name;
	private double balance = 0.0;
	private static int numViewBalance = 0;
	private static int numDeposits = 0;
	private static int numWithdraws = 0;
	private static int numTransfers = 0;
	private static double totalInAccount = 0.0;
	private static double totalOutAccount = 0.0;
	// space
	public static double totalCharges = 0;
	public static double TotalViewBalance = 0;
	public static double TotalDeposits = 0;
	public static double TotalWithdraws = 0;
	public static double TotalTransfers = 0;

	public Account(int number, String name, double balance) {
		this.name = name;
		this.number = number;
		this.balance = balance;
		Account.numDeposits = 0;
		Account.numTransfers = 0;
		Account.numViewBalance = 0;
		Account.numWithdraws = 0;
		Account.totalInAccount = 0;
		Account.totalOutAccount = 0;
	}

	private boolean isAvaliable(double amount) {
		return balance > amount;
	}

	public boolean deposit(double amount) {
		if (amount > 0) {
			balance += amount;
			numDeposits++;
			TotalDeposits += amount;
			totalInAccount +=amount;
			return true;
		} else {
			return false;
		}

	}

	public boolean withdraw(double amount) {
		double fees = amount * 0.01;
		if (isAvaliable(amount + fees)) {
			balance -= (amount + fees);
			numWithdraws++;
			TotalWithdraws+= amount;
			totalOutAccount +=(amount + fees);
			totalCharges += fees;
			return true;
		} else {
			return false;
		}
	}

	public boolean transfer(Account obj, double amount) {
		double charge = amount * 0.025;
		if (this.number == obj.number && this.name.equalsIgnoreCase(obj.name)) {
			System.out.println("You Can't Transfer The Money To Yourself");
			return false;
		}

		else {

			if (isAvaliable(amount + charge) && !obj.name.equals(null)) {
				balance -= (amount + charge);
				obj.balance += amount;
				totalOutAccount+=(amount + charge);
				numTransfers++;
				TotalTransfers += amount;
				totalCharges += charge;
				return true;

			} else
				return false;

		}
	}

	public void displayBalance() {
		System.out.println("Account name = " + name);
		System.out.println("Balance : " + balance);
		numViewBalance++;
		TotalViewBalance++;
	}

	static public void displayStatistics() {
		System.out.println("This Is The Number of Deposits = " + numDeposits);
		System.out.println("This Is The Number of Withdraws = " + numWithdraws);
		System.out.println("This Is The Number of Transfers = " + numTransfers);
		System.out.println("The total money in : " + Account.totalInAccount);
		System.out.println("The total money out : " + Account.totalOutAccount);

		if (numDeposits == numWithdraws & numDeposits == numTransfers & numTransfers == numWithdraws) {
			System.out.println(" all operations are equal");
		} else if (numDeposits >= numWithdraws & numDeposits >= numTransfers) {
			if (numDeposits == numWithdraws)
				System.out.println("withdrawals and deposits are most used operations");
			else if (numDeposits == numTransfers)
				System.out.println("Transfers and deposits are most used operations");
			else
				System.out.println("deposits is most used operation");
		} else if (numWithdraws >= numDeposits & numWithdraws >= numTransfers) {
			if (numWithdraws == numDeposits)
				System.out.println("withdrawals and deposits are most used operations");
			else if (numWithdraws == numTransfers)
				System.out.println("withdrawals and Transfers are most used operations");
			else
				System.out.println("withdrawals is most used operation");
		} else {
			if (numTransfers == numDeposits)
				System.out.println(" deposits and Transfers are most used operations");
			else if (numTransfers == numWithdraws)
				System.out.println("withdrawals and Transfers are most used operations");
			else
				System.out.println("Transfers is most used operation");
		}
	}

 	public void reset() {
		numDeposits = 0;
		numTransfers = 0;
		numWithdraws = 0;
		numViewBalance = 0;
		totalInAccount = 0;
		totalOutAccount = 0;

	}

	public int getNumber() {
		return number;
	}

	public String getName() {
		return name;
	}

	public double getBalance() {
		return balance;
	}

	public int getNumViewBalance() {
		return numViewBalance;
	}

	public int getNumDeposits() {
		return numDeposits;
	}

	public int getNumWithdraws() {
		return numWithdraws;
	}

	public int getNumTransfers() {
		return numTransfers;
	}

	public double getTotalInAccount() {
		return totalInAccount;
	}

	public double getTotalOutAccount() {
		return totalOutAccount;
	}

	public double getTotalCharges() {
		return totalCharges;
	}

	public double getTotalViewBalance() {
		return TotalViewBalance;
	}

	public double getTotalDeposits() {
		return TotalDeposits;
	}

	public double getTotalWithdraws() {
		return TotalWithdraws;
	}

	public double getTotalTransfers() {
		return TotalTransfers;
	}

	public void setNumber(int number) {
		this.number = number;
	}

	public void setName(String name) {
		this.name = name;
	}

	public void setBalance(double balance) {
		this.balance = balance;
	}

}
